#ifndef SYNTAX_KIND_H
#define SYNTAX_KIND_H

typedef enum {
  SYNTAX_KIND_BAD_TOKEN,
  SYNTAX_KIND_IDENTIFIER_TOKEN,
  SYNTAX_KIND_INTEGER_LITERAL,
  SYNTAX_KIND_STRING_LITERAL,
  SYNTAX_KIND_PLUS_TOKEN,
  SYNTAX_KIND_MINUS_TOKEN,
  SYNTAX_KIND_STAR_TOKEN,
  SYNTAX_KIND_EQUAL_TOKEN,
  SYNTAX_KIND_NOT_EQUAL_TOKEN,
  SYNTAX_KIND_LESS_THAN_TOKEN,
  SYNTAX_KIND_LESS_THAN_EQUAL_TOKEN,
  SYNTAX_KIND_GREATER_THAN_TOKEN,
  SYNTAX_KIND_GREATER_THAN_EQUAL_TOKEN,
  SYNTAX_KIND_LEFT_PARENTHESIS_TOKEN,
  SYNTAX_KIND_RIGHT_PARENTHESIS_TOKEN,
  SYNTAX_KIND_LEFT_BRACKET_TOKEN,
  SYNTAX_KIND_RIGHT_BRACKET_TOKEN,
  SYNTAX_KIND_ASSIGN_TOKEN,
  SYNTAX_KIND_DOT_TOKEN,
  SYNTAX_KIND_COMMA_TOKEN,
  SYNTAX_KIND_COLON_TOKEN,
  SYNTAX_KIND_SEMICOLON_TOKEN,
  SYNTAX_KIND_PROGRAM_KEYWORD,
  SYNTAX_KIND_VAR_KEYWORD,
  SYNTAX_KIND_ARRAY_KEYWORD,
  SYNTAX_KIND_OF_KEYWORD,
  SYNTAX_KIND_BEGIN_KEYWORD,
  SYNTAX_KIND_END_KEYWORD,
  SYNTAX_KIND_IF_KEYWORD,
  SYNTAX_KIND_THEN_KEYWORD,
  SYNTAX_KIND_ELSE_KEYWORD,
  SYNTAX_KIND_PROCEDURE_KEYWORD,
  SYNTAX_KIND_RETURN_KEYWORD,
  SYNTAX_KIND_CALL_KEYWORD,
  SYNTAX_KIND_WHILE_KEYWORD,
  SYNTAX_KIND_DO_KEYWORD,
  SYNTAX_KIND_NOT_KEYWORD,
  SYNTAX_KIND_OR_KEYWORD,
  SYNTAX_KIND_DIV_KEYWORD,
  SYNTAX_KIND_AND_KEYWORD,
  SYNTAX_KIND_CHAR_KEYWORD,
  SYNTAX_KIND_INTEGER_KEYWORD,
  SYNTAX_KIND_BOOLEAN_KEYWORD,
  SYNTAX_KIND_READ_KEYWORD,
  SYNTAX_KIND_WRITE_KEYWORD,
  SYNTAX_KIND_READLN_KEYWORD,
  SYNTAX_KIND_WRITELN_KEYWORD,
  SYNTAX_KIND_TRUE_KEYWORD,
  SYNTAX_KIND_FALSE_KEYWORD,
  SYNTAX_KIND_BREAK_KEYWORD,
  SYNTAX_KIND_EOF_TOKEN,
  SYNTAX_KIND_SPACE_TRIVIA,
  SYNTAX_KIND_NEWLINE_TRIVIA,
  SYNTAX_KIND_BRACES_COMMENT_TRIVIA,
  SYNTAX_KIND_C_COMMENT_TRIVIA,
  SYNTAX_KIND_PROGRAM,
  SYNTAX_KIND_VARIABLE_DECLARATION_PART,
  SYNTAX_KIND_VARIABLE_DECLARATION,
  SYNTAX_KIND_ARRAY_TYPE,
  SYNTAX_KIND_PROCEDURE_DECLARATION,
  SYNTAX_KIND_FORMAL_PARAMETER_LIST,
  SYNTAX_KIND_FORMAL_PARAMETER_SECTION,
  SYNTAX_KIND_ASSIGNMENT_STATEMENT,
  SYNTAX_KIND_IF_STATEMENT,
  SYNTAX_KIND_WHILE_STATEMENT,
  SYNTAX_KIND_BREAK_STATEMENT,
  SYNTAX_KIND_CALL_STATEMENT,
  SYNTAX_KIND_ACTUAL_PARAMETER_LIST,
  SYNTAX_KIND_RETURN_STATEMENT,
  SYNTAX_KIND_INPUT_STATEMENT,
  SYTANX_KIND_INPUT_LIST,
  SYNTAX_KIND_OUTPUT_STATEMENT,
  SYNTAX_KIND_OUTPUT_LIST,
  SYNTAX_KIND_OUTPUT_VALUE,
  SYNTAX_KIND_COMPOUND_STATEMENT,
  SYNTAX_KIND_ENTIRE_VARIABLE,
  SYNTAX_KIND_INDEXED_VARIABLE,
  SYNTAX_KIND_BINARY_EXPRESSION,
  SYNTAX_KIND_PARENTHESIZED_EXPRESSION,
  SYNTAX_KIND_NOT_EXPRESSION,
  SYNTAX_KIND_CAST_EXPRESSION
} SyntaxKind;

SyntaxKind  syntax_kind_from_keyword(const char *string, unsigned long size);
int         syntax_kind_is_token(SyntaxKind kind);
int         syntax_kind_is_trivia(SyntaxKind kind);
const char *syntax_kind_to_string(SyntaxKind kind);

#endif
